===The clouse is:===
0
M 0 1:INT
S 0 0:$
program 0 0:$
===
1
S 0 1:$
===
2
program 0 1:$
===
3
program 0 2:$
===
4
program 0 3:$
===
5
program 0 4:$
===
6
program 0 5:$
===
7
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:RETURN
block 1 1:RETURN
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
program 0 6:$
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
8
program 0 7:$
===
9
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:RETURN
block 0 1:RETURN
block 1 1:RETURN
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
10
wstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
11
expstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
12
expstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
13
asstat 1 1:;
===
14
wstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
15
exestat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
16
exestat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
17
exestat 2 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
18
exestat 3 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
19
controlstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
20
controlstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
21
controlstat 2 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
22
controlstat 3 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
23
idlist 0 0:; ,
idlist 1 0:; ,
varstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
24
atype 0 1:ID
type 0 1:ID
===
25
type 1 1:ID
===
26
stype 1 1:ID [
===
27
atype 0 0:ID
constat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
28
arrayelement 0 1:=
asstat 0 1:;
asstat 2 1:;
asstat 3 1:;
===
29
rstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
30
wrstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
31
ifstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
32
whilestat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
33
dowhilestat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
34
forstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
35
stype 2 1:ID [
===
36
stype 0 1:ID [
===
37
stype 3 1:ID [
===
38
program 0 8:$
===
39
block 0 2:RETURN
===
40
asstat 1 2:;
calexp 0 0:; + - %
calexp 1 0:; + - %
calexp 2 0:; + - %
calexp 3 0:; + - %
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
===
41
exestat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
42
idlist 0 1:; ,
varstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
43
idlist 1 1:; ,
===
44
atype 0 2:ID
===
45
constat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
46
arrayelement 0 2:=
===
47
asstat 0 2:;
calexp 0 0:; + - %
calexp 1 0:; + - %
calexp 2 0:; + - %
calexp 3 0:; + - %
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
===
48
asstat 2 2:;
===
49
asstat 3 2:;
===
50
atype 0 0:,
rstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:, [
stype 1 0:, [
stype 2 0:, [
stype 3 0:, [
type 0 0:,
type 1 0:,
===
51
con 0 0:) ,
con 1 0:) ,
con 2 0:) ,
con 3 0:) ,
con 4 0:) ,
con 5 0:) ,
digit 0 0:) ,
digit 1 0:) ,
idlist 0 0:) ,
idlist 1 0:) ,
printcontent 0 0:) ,
printcontent 1 0:) ,
printcontent 2 0:) ,
printcontent 3 0:) ,
wrstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
52
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
ifstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
===
53
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
whilestat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
54
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
55
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
forstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
56
program 0 9:$
===
57
asstat 1 3:;
calexp 0 1:; + - %
calexp 1 1:; + - %
calexp 2 1:; + - %
===
58
calexp 3 1:; + - %
item 0 1:; + - % * /
item 1 1:; + - % * /
===
59
item 2 1:; + - % * /
===
60
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:; + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
61
factory 0 1:; + - % * /
===
62
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 3 1:; + - % * /
factory 4 0:; + - % * /
===
63
factory 1 1:; + - % * /
===
64
factory 2 1:; + - % * /
===
65
varstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
66
idlist 0 2:; ,
===
67
atype 0 3:ID
===
68
constat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
69
arrayelement 0 3:=
===
70
asstat 0 3:;
calexp 0 1:; + - %
calexp 1 1:; + - %
calexp 2 1:; + - %
===
71
rstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
72
atype 0 1:,
type 0 1:,
===
73
type 1 1:,
===
74
stype 1 1:, [
===
75
stype 2 1:, [
===
76
stype 0 1:, [
===
77
stype 3 1:, [
===
78
idlist 0 1:) ,
printcontent 3 1:) ,
===
79
printcontent 0 1:) ,
printcontent 1 1:) ,
wrstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
80
printcontent 2 1:) ,
===
81
con 2 1:) ,
===
82
idlist 1 1:) ,
===
83
digit 0 1:) ,
===
84
digit 1 1:) ,
===
85
con 0 1:) ,
===
86
con 1 1:) ,
===
87
con 3 1:) ,
===
88
con 4 1:) ,
===
89
con 5 1:) ,
===
90
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID INTCON DOUBLECON - (
compare 1 0:ID INTCON DOUBLECON - (
compare 2 0:ID INTCON DOUBLECON - (
compare 3 0:ID INTCON DOUBLECON - (
compare 4 0:ID INTCON DOUBLECON - (
compare 5 0:ID INTCON DOUBLECON - (
regexp 0 1:&& )
===
91
calexp 3 1:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
92
item 2 1:LE GE L G EQ NE + - % * /
===
93
ifstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
94
boexp 0 1:)
boexp 1 1:)
===
95
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:LE GE L G EQ NE + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
96
factory 0 1:LE GE L G EQ NE + - % * /
===
97
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 3 1:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
===
98
factory 1 1:LE GE L G EQ NE + - % * /
===
99
factory 2 1:LE GE L G EQ NE + - % * /
===
100
whilestat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
101
dowhilestat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
102
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 0 1:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
103
wstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
104
expstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
105
expstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
106
wstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
107
exestat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
108
exestat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
109
exestat 2 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
110
exestat 3 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
111
controlstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
112
controlstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
113
controlstat 2 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
114
controlstat 3 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
115
idlist 0 0:; ,
idlist 1 0:; ,
varstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
116
atype 0 0:ID
constat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
117
rstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
118
wrstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
119
ifstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
120
whilestat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
121
dowhilestat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
122
forstat 0 1:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
123
forstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
124
program 0 10:$
===
125
calexp 0 2:; + - %
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
===
126
calexp 1 2:; + - %
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
===
127
calexp 2 2:; + - %
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
===
128
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 1 2:; + - % * /
===
129
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 2:; + - % * /
===
130
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
factory 4 2:; + - % * /
===
131
calexp 3 1:) + - %
item 0 1:) + - % * /
item 1 1:) + - % * /
===
132
item 2 1:) + - % * /
===
133
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
134
factory 0 1:) + - % * /
===
135
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 3 1:) + - % * /
factory 4 0:) + - % * /
===
136
factory 1 1:) + - % * /
===
137
factory 2 1:) + - % * /
===
138
factory 3 2:; + - % * /
===
139
idlist 0 3:; ,
===
140
atype 0 4:ID
===
141
con 0 0:;
con 1 0:;
con 2 0:;
con 3 0:;
con 4 0:;
con 5 0:;
constat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
digit 0 0:;
digit 1 0:;
===
142
arrayelement 0 4:=
===
143
rstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
144
atype 0 2:,
===
145
idlist 0 2:) ,
===
146
wrstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
147
con 0 0:) ,
con 1 0:) ,
con 2 0:) ,
con 3 0:) ,
con 4 0:) ,
con 5 0:) ,
digit 0 0:) ,
digit 1 0:) ,
idlist 0 0:) ,
idlist 1 0:) ,
printcontent 0 2:) ,
printcontent 1 2:) ,
===
148
digit 1 2:) ,
===
149
con 4 2:) ,
===
150
con 5 2:) ,
===
151
calexp 0 0:&& ) + - %
calexp 1 0:&& ) + - %
calexp 2 0:&& ) + - %
calexp 3 0:&& ) + - %
factory 0 0:&& ) + - % * /
factory 1 0:&& ) + - % * /
factory 2 0:&& ) + - % * /
factory 3 0:&& ) + - % * /
factory 4 0:&& ) + - % * /
item 0 0:&& ) + - % * /
item 1 0:&& ) + - % * /
item 2 0:&& ) + - % * /
regexp 0 2:&& )
===
152
calexp 0 2:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
===
153
calexp 1 2:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
===
154
calexp 2 2:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
===
155
compare 0 1:ID INTCON DOUBLECON - (
===
156
compare 1 1:ID INTCON DOUBLECON - (
===
157
compare 2 1:ID INTCON DOUBLECON - (
===
158
compare 3 1:ID INTCON DOUBLECON - (
===
159
compare 4 1:ID INTCON DOUBLECON - (
===
160
compare 5 1:ID INTCON DOUBLECON - (
===
161
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 1 2:LE GE L G EQ NE + - % * /
===
162
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 2:LE GE L G EQ NE + - % * /
===
163
IM 0 1:{
ifstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
164
boexp 0 2:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:)
===
165
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
factory 4 2:LE GE L G EQ NE + - % * /
===
166
factory 3 2:LE GE L G EQ NE + - % * /
===
167
whilestat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
168
dowhilestat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
169
block 0 2:}
===
170
exestat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
171
idlist 0 1:; ,
varstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
172
constat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
173
atype 0 0:,
rstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:, [
stype 1 0:, [
stype 2 0:, [
stype 3 0:, [
type 0 0:,
type 1 0:,
===
174
con 0 0:) ,
con 1 0:) ,
con 2 0:) ,
con 3 0:) ,
con 4 0:) ,
con 5 0:) ,
digit 0 0:) ,
digit 1 0:) ,
idlist 0 0:) ,
idlist 1 0:) ,
printcontent 0 0:) ,
printcontent 1 0:) ,
printcontent 2 0:) ,
printcontent 3 0:) ,
wrstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
175
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
ifstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
===
176
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
whilestat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
177
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
178
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
forstat 0 2:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
179
boexp 0 0:;
boexp 1 0:;
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
forstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& ;
===
180
program 0 11:$
===
181
calexp 0 3:; + - %
item 0 1:; + - % * /
item 1 1:; + - % * /
===
182
calexp 1 3:; + - %
item 0 1:; + - % * /
item 1 1:; + - % * /
===
183
calexp 2 3:; + - %
item 0 1:; + - % * /
item 1 1:; + - % * /
===
184
item 1 3:; + - % * /
===
185
item 0 3:; + - % * /
===
186
factory 4 3:; + - % * /
===
187
calexp 0 2:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
188
calexp 1 2:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
189
calexp 2 2:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
190
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 1 2:) + - % * /
===
191
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 2:) + - % * /
===
192
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
factory 4 2:) + - % * /
===
193
factory 3 2:) + - % * /
===
194
constat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
195
con 2 1:;
===
196
digit 0 1:;
===
197
digit 1 1:;
===
198
con 0 1:;
===
199
con 1 1:;
===
200
con 3 1:;
===
201
con 4 1:;
===
202
con 5 1:;
===
203
rstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
204
atype 0 3:,
===
205
idlist 0 3:) ,
===
206
wrstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
207
idlist 0 1:) ,
printcontent 0 3:) ,
===
208
printcontent 1 3:) ,
===
209
con 4 3:) ,
===
210
con 5 3:) ,
===
211
calexp 0 1:&& ) + - %
calexp 1 1:&& ) + - %
calexp 2 1:&& ) + - %
regexp 0 3:&& )
===
212
calexp 3 1:&& ) + - %
item 0 1:&& ) + - % * /
item 1 1:&& ) + - % * /
===
213
item 2 1:&& ) + - % * /
===
214
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:&& ) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
215
factory 0 1:&& ) + - % * /
===
216
factory 0 0:&& ) + - % * /
factory 1 0:&& ) + - % * /
factory 2 0:&& ) + - % * /
factory 3 0:&& ) + - % * /
factory 3 1:&& ) + - % * /
factory 4 0:&& ) + - % * /
===
217
factory 1 1:&& ) + - % * /
===
218
factory 2 1:&& ) + - % * /
===
219
calexp 0 3:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
220
calexp 1 3:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
221
calexp 2 3:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
222
item 1 3:LE GE L G EQ NE + - % * /
===
223
item 0 3:LE GE L G EQ NE + - % * /
===
224
ifstat 2 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
225
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
226
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID INTCON DOUBLECON - (
compare 1 0:ID INTCON DOUBLECON - (
compare 2 0:ID INTCON DOUBLECON - (
compare 3 0:ID INTCON DOUBLECON - (
compare 4 0:ID INTCON DOUBLECON - (
compare 5 0:ID INTCON DOUBLECON - (
regexp 0 1:)
===
227
boexp 0 3:)
===
228
factory 4 3:LE GE L G EQ NE + - % * /
===
229
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
230
dowhilestat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
231
varstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
232
constat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
233
rstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
234
printcontent 0 1:) ,
printcontent 1 1:) ,
wrstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
235
ifstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
236
whilestat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
237
dowhilestat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
238
forstat 0 3:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
239
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID INTCON DOUBLECON - (
compare 1 0:ID INTCON DOUBLECON - (
compare 2 0:ID INTCON DOUBLECON - (
compare 3 0:ID INTCON DOUBLECON - (
compare 4 0:ID INTCON DOUBLECON - (
compare 5 0:ID INTCON DOUBLECON - (
regexp 0 1:&& ;
===
240
forstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
241
boexp 0 1:;
boexp 1 1:;
===
242
calexp 0 3:) + - %
item 0 1:) + - % * /
item 1 1:) + - % * /
===
243
calexp 1 3:) + - %
item 0 1:) + - % * /
item 1 1:) + - % * /
===
244
calexp 2 3:) + - %
item 0 1:) + - % * /
item 1 1:) + - % * /
===
245
item 1 3:) + - % * /
===
246
item 0 3:) + - % * /
===
247
factory 4 3:) + - % * /
===
248
constat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
249
digit 1 2:;
===
250
con 4 2:;
===
251
con 5 2:;
===
252
rstat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
253
atype 0 4:,
===
254
calexp 0 2:&& ) + - %
factory 0 0:&& ) + - % * /
factory 1 0:&& ) + - % * /
factory 2 0:&& ) + - % * /
factory 3 0:&& ) + - % * /
factory 4 0:&& ) + - % * /
item 0 0:&& ) + - % * /
item 1 0:&& ) + - % * /
item 2 0:&& ) + - % * /
===
255
calexp 1 2:&& ) + - %
factory 0 0:&& ) + - % * /
factory 1 0:&& ) + - % * /
factory 2 0:&& ) + - % * /
factory 3 0:&& ) + - % * /
factory 4 0:&& ) + - % * /
item 0 0:&& ) + - % * /
item 1 0:&& ) + - % * /
item 2 0:&& ) + - % * /
===
256
calexp 2 2:&& ) + - %
factory 0 0:&& ) + - % * /
factory 1 0:&& ) + - % * /
factory 2 0:&& ) + - % * /
factory 3 0:&& ) + - % * /
factory 4 0:&& ) + - % * /
item 0 0:&& ) + - % * /
item 1 0:&& ) + - % * /
item 2 0:&& ) + - % * /
===
257
factory 0 0:&& ) + - % * /
factory 1 0:&& ) + - % * /
factory 2 0:&& ) + - % * /
factory 3 0:&& ) + - % * /
factory 4 0:&& ) + - % * /
item 1 2:&& ) + - % * /
===
258
factory 0 0:&& ) + - % * /
factory 1 0:&& ) + - % * /
factory 2 0:&& ) + - % * /
factory 3 0:&& ) + - % * /
factory 4 0:&& ) + - % * /
item 0 2:&& ) + - % * /
===
259
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
factory 4 2:&& ) + - % * /
===
260
factory 3 2:&& ) + - % * /
===
261
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
262
ifstat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
263
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 2:)
===
264
whilestat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
265
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
dowhilestat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
===
266
con 0 0:;
con 1 0:;
con 2 0:;
con 3 0:;
con 4 0:;
con 5 0:;
constat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
digit 0 0:;
digit 1 0:;
===
267
rstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
268
wrstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
269
IM 0 1:{
ifstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
270
whilestat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
271
dowhilestat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
272
boexp 0 0:;
boexp 1 0:;
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
forstat 0 4:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& ;
===
273
calexp 0 0:&& ; + - %
calexp 1 0:&& ; + - %
calexp 2 0:&& ; + - %
calexp 3 0:&& ; + - %
factory 0 0:&& ; + - % * /
factory 1 0:&& ; + - % * /
factory 2 0:&& ; + - % * /
factory 3 0:&& ; + - % * /
factory 4 0:&& ; + - % * /
item 0 0:&& ; + - % * /
item 1 0:&& ; + - % * /
item 2 0:&& ; + - % * /
regexp 0 2:&& ;
===
274
arrayelement 0 0:=
asstat 0 0:)
asstat 1 0:)
asstat 2 0:)
asstat 3 0:)
forstat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
275
boexp 0 2:;
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:;
===
276
con 4 3:;
===
277
con 5 3:;
===
278
rstat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
279
calexp 0 3:&& ) + - %
item 0 1:&& ) + - % * /
item 1 1:&& ) + - % * /
===
280
calexp 1 3:&& ) + - %
item 0 1:&& ) + - % * /
item 1 1:&& ) + - % * /
===
281
calexp 2 3:&& ) + - %
item 0 1:&& ) + - % * /
item 1 1:&& ) + - % * /
===
282
item 1 3:&& ) + - % * /
===
283
item 0 3:&& ) + - % * /
===
284
factory 4 3:&& ) + - % * /
===
285
IME 0 1:}
ifstat 2 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
286
elseifblock 0 0:ELSE ELSEIF
elseifblock 1 0:ELSE ELSEIF
ifstat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
287
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
regexp 0 3:)
===
288
whilestat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
289
dowhilestat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
290
constat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
291
rstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
292
wrstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
293
ifstat 2 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
294
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
295
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
296
dowhilestat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
297
forstat 0 5:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
298
calexp 0 1:&& ; + - %
calexp 1 1:&& ; + - %
calexp 2 1:&& ; + - %
regexp 0 3:&& ;
===
299
calexp 3 1:&& ; + - %
item 0 1:&& ; + - % * /
item 1 1:&& ; + - % * /
===
300
item 2 1:&& ; + - % * /
===
301
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:&& ; + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
302
factory 0 1:&& ; + - % * /
===
303
factory 0 0:&& ; + - % * /
factory 1 0:&& ; + - % * /
factory 2 0:&& ; + - % * /
factory 3 0:&& ; + - % * /
factory 3 1:&& ; + - % * /
factory 4 0:&& ; + - % * /
===
304
factory 1 1:&& ; + - % * /
===
305
factory 2 1:&& ; + - % * /
===
306
asstat 1 1:)
===
307
forstat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
308
arrayelement 0 1:=
asstat 0 1:)
asstat 2 1:)
asstat 3 1:)
===
309
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID INTCON DOUBLECON - (
compare 1 0:ID INTCON DOUBLECON - (
compare 2 0:ID INTCON DOUBLECON - (
compare 3 0:ID INTCON DOUBLECON - (
compare 4 0:ID INTCON DOUBLECON - (
compare 5 0:ID INTCON DOUBLECON - (
regexp 0 1:;
===
310
boexp 0 3:;
===
311
ifstat 2 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
312
elseifblock 1 1:ELSE ELSEIF
ifstat 1 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
313
ifstat 0 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
314
elseifblock 0 1:ELSE ELSEIF
===
315
dowhilestat 0 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
316
constat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
317
rstat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
318
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
319
ifstat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
320
whilestat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
321
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
dowhilestat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
===
322
arrayelement 0 0:=
asstat 0 0:)
asstat 1 0:)
asstat 2 0:)
asstat 3 0:)
forstat 0 6:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
323
calexp 0 2:&& ; + - %
factory 0 0:&& ; + - % * /
factory 1 0:&& ; + - % * /
factory 2 0:&& ; + - % * /
factory 3 0:&& ; + - % * /
factory 4 0:&& ; + - % * /
item 0 0:&& ; + - % * /
item 1 0:&& ; + - % * /
item 2 0:&& ; + - % * /
===
324
calexp 1 2:&& ; + - %
factory 0 0:&& ; + - % * /
factory 1 0:&& ; + - % * /
factory 2 0:&& ; + - % * /
factory 3 0:&& ; + - % * /
factory 4 0:&& ; + - % * /
item 0 0:&& ; + - % * /
item 1 0:&& ; + - % * /
item 2 0:&& ; + - % * /
===
325
calexp 2 2:&& ; + - %
factory 0 0:&& ; + - % * /
factory 1 0:&& ; + - % * /
factory 2 0:&& ; + - % * /
factory 3 0:&& ; + - % * /
factory 4 0:&& ; + - % * /
item 0 0:&& ; + - % * /
item 1 0:&& ; + - % * /
item 2 0:&& ; + - % * /
===
326
factory 0 0:&& ; + - % * /
factory 1 0:&& ; + - % * /
factory 2 0:&& ; + - % * /
factory 3 0:&& ; + - % * /
factory 4 0:&& ; + - % * /
item 1 2:&& ; + - % * /
===
327
factory 0 0:&& ; + - % * /
factory 1 0:&& ; + - % * /
factory 2 0:&& ; + - % * /
factory 3 0:&& ; + - % * /
factory 4 0:&& ; + - % * /
item 0 2:&& ; + - % * /
===
328
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
factory 4 2:&& ; + - % * /
===
329
factory 3 2:&& ; + - % * /
===
330
asstat 1 2:)
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
331
forstat 0 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
332
asstat 0 2:)
calexp 0 0:) + - %
calexp 1 0:) + - %
calexp 2 0:) + - %
calexp 3 0:) + - %
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
===
333
asstat 2 2:)
===
334
asstat 3 2:)
===
335
calexp 0 0:; + - %
calexp 1 0:; + - %
calexp 2 0:; + - %
calexp 3 0:; + - %
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 2:;
===
336
ifstat 2 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
337
ifstat 1 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
338
elseifblock 1 2:ELSE ELSEIF
===
339
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
340
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
elseifblock 0 2:ELSE ELSEIF
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
===
341
rstat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
342
IME 0 1:}
ifstat 2 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
343
elseifblock 0 0:ELSE ELSEIF
elseifblock 1 0:ELSE ELSEIF
ifstat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
344
whilestat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
345
dowhilestat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
346
forstat 0 7:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
347
calexp 0 3:&& ; + - %
item 0 1:&& ; + - % * /
item 1 1:&& ; + - % * /
===
348
calexp 1 3:&& ; + - %
item 0 1:&& ; + - % * /
item 1 1:&& ; + - % * /
===
349
calexp 2 3:&& ; + - %
item 0 1:&& ; + - % * /
item 1 1:&& ; + - % * /
===
350
item 1 3:&& ; + - % * /
===
351
item 0 3:&& ; + - % * /
===
352
factory 4 3:&& ; + - % * /
===
353
asstat 1 3:)
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
===
354
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
355
asstat 0 3:)
calexp 0 1:) + - %
calexp 1 1:) + - %
calexp 2 1:) + - %
===
356
calexp 0 1:; + - %
calexp 1 1:; + - %
calexp 2 1:; + - %
regexp 0 3:;
===
357
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 10:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
358
boexp 0 0:)
boexp 1 0:)
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
elseifblock 1 3:ELSE ELSEIF
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:&& )
===
359
ifstat 0 10:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
360
elseifblock 0 3:ELSE ELSEIF
===
361
ifstat 2 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
362
elseifblock 1 1:ELSE ELSEIF
ifstat 1 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
363
ifstat 0 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
364
dowhilestat 0 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
365
forstat 0 8:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
366
forstat 0 10:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
367
ifstat 1 11:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
368
elseifblock 1 4:ELSE ELSEIF
===
369
ifstat 0 11:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
370
elseifblock 0 4:ELSE ELSEIF
===
371
ifstat 2 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
372
ifstat 1 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
373
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
374
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 9:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
375
forstat 0 11:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
376
ifstat 1 12:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
377
elseifblock 1 5:ELSE ELSEIF
===
378
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
elseifblock 0 5:ELSE ELSEIF
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
379
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 10:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
380
ifstat 0 10:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
381
forstat 0 10:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
382
arrayelement 0 0:=
asstat 0 0:;
asstat 1 0:;
asstat 2 0:;
asstat 3 0:;
atype 0 0:ID
block 0 0:}
block 1 1:}
constat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
elseifblock 1 6:ELSE ELSEIF
exestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 2 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
383
elseifblock 0 6:ELSE ELSEIF
===
384
ifstat 1 11:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
385
ifstat 0 11:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
386
forstat 0 11:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
387
elseifblock 1 7:ELSE ELSEIF
===
388
elseifblock 0 7:ELSE ELSEIF
===
389
ifstat 1 12:CONST BOOL INT DOUBLE CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
390
elseifblock 1 8:ELSE ELSEIF
===
