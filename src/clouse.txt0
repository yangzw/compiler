===The clouse is:===
0
S 0 0:$
atype 0 0:ID
constat 0 0:VOID BOOL INT FLOAT CHAR
expstat 0 0:VOID BOOL INT FLOAT CHAR
expstat 1 0:VOID BOOL INT FLOAT CHAR
expstat 2 0:VOID BOOL INT FLOAT CHAR
expstat 3 0:VOID BOOL INT FLOAT CHAR
functiondefine 0 0:INT VOID BOOL FLOAT CHAR
functiondefine 1 0:INT VOID BOOL FLOAT CHAR
functionlist 0 0:INT VOID BOOL FLOAT CHAR
functionlist 1 0:INT VOID BOOL FLOAT CHAR
functionlist 2 0:INT VOID BOOL FLOAT CHAR
funstat 0 0:VOID BOOL INT FLOAT CHAR
mainfunction 0 0:VOID BOOL INT FLOAT CHAR
program 0 0:$
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:VOID BOOL INT FLOAT CHAR
===
1
S 0 1:$
===
2
atype 0 0:ID
functiondefine 0 0:INT VOID BOOL FLOAT CHAR
functiondefine 1 0:INT VOID BOOL FLOAT CHAR
functionlist 0 0:INT VOID BOOL FLOAT CHAR
functionlist 1 0:INT VOID BOOL FLOAT CHAR
functionlist 2 0:INT VOID BOOL FLOAT CHAR
mainfunction 0 0:VOID BOOL INT FLOAT CHAR
program 0 1:$
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
3
atype 0 0:ID
functiondefine 0 0:INT VOID BOOL FLOAT CHAR
functiondefine 1 0:INT VOID BOOL FLOAT CHAR
functionlist 0 1:INT VOID BOOL FLOAT CHAR
mainfunction 0 0:VOID BOOL INT FLOAT CHAR
program 0 2:$
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
4
atype 0 0:ID
functiondefine 0 0:$ VOID BOOL INT FLOAT CHAR
functiondefine 1 0:$ VOID BOOL INT FLOAT CHAR
functionlist 0 0:$ VOID BOOL INT FLOAT CHAR
functionlist 1 0:$ VOID BOOL INT FLOAT CHAR
functionlist 2 0:$ VOID BOOL INT FLOAT CHAR
program 0 3:$
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
5
functionlist 0 2:INT VOID BOOL FLOAT CHAR
functionlist 1 1:INT VOID BOOL FLOAT CHAR
===
6
expstat 0 1:VOID BOOL INT FLOAT CHAR
===
7
expstat 1 1:VOID BOOL INT FLOAT CHAR
===
8
expstat 2 1:VOID BOOL INT FLOAT CHAR
===
9
functiondefine 1 1:INT VOID BOOL FLOAT CHAR
funstat 0 1:VOID BOOL INT FLOAT CHAR
idlist 0 0:;
idlist 1 0:;
varstat 0 1:VOID BOOL INT FLOAT CHAR
===
10
atype 0 1:ID
type 0 1:ID
===
11
type 1 1:ID
===
12
mainfunction 0 1:VOID BOOL INT FLOAT CHAR
stype 1 1:ID [
===
13
atype 0 0:ID
constat 0 1:VOID BOOL INT FLOAT CHAR
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
14
functiondefine 0 1:INT VOID BOOL FLOAT CHAR
===
15
stype 2 1:ID [
===
16
stype 0 1:ID [
===
17
stype 3 1:ID [
===
18
atype 0 0:ID
functiondefine 0 0:$ VOID BOOL INT FLOAT CHAR
functiondefine 1 0:$ VOID BOOL INT FLOAT CHAR
functionlist 0 1:$ VOID BOOL INT FLOAT CHAR
program 0 4:$
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
19
functionlist 0 2:$ VOID BOOL INT FLOAT CHAR
functionlist 1 1:$ VOID BOOL INT FLOAT CHAR
===
20
functiondefine 1 1:$ VOID BOOL INT FLOAT CHAR
===
21
functiondefine 0 1:$ VOID BOOL INT FLOAT CHAR
===
22
varstat 0 2:VOID BOOL INT FLOAT CHAR
===
23
functiondefine 1 2:INT VOID BOOL FLOAT CHAR
funstat 0 2:VOID BOOL INT FLOAT CHAR
idlist 0 1:;
idlist 1 1:;
===
24
atype 0 2:ID
===
25
mainfunction 0 2:VOID BOOL INT FLOAT CHAR
===
26
constat 0 2:VOID BOOL INT FLOAT CHAR
===
27
functiondefine 0 2:INT VOID BOOL FLOAT CHAR
===
28
functiondefine 1 2:$ VOID BOOL INT FLOAT CHAR
===
29
functiondefine 0 2:$ VOID BOOL INT FLOAT CHAR
===
30
varstat 0 3:VOID BOOL INT FLOAT CHAR
===
31
atype 0 0:ID
functiondefine 1 3:INT VOID BOOL FLOAT CHAR
funstat 0 3:VOID BOOL INT FLOAT CHAR
paralist 0 0:)
paralist 1 0:)
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
32
idlist 0 0:;
idlist 0 2:;
idlist 1 0:;
===
33
atype 0 3:ID
===
34
mainfunction 0 3:VOID BOOL INT FLOAT CHAR
===
35
constat 0 3:VOID BOOL INT FLOAT CHAR
===
36
atype 0 0:ID
functiondefine 0 3:INT VOID BOOL FLOAT CHAR
paralist 0 0:)
paralist 1 0:)
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
37
atype 0 0:ID
functiondefine 1 3:$ VOID BOOL INT FLOAT CHAR
paralist 0 0:)
paralist 1 0:)
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
38
atype 0 0:ID
functiondefine 0 3:$ VOID BOOL INT FLOAT CHAR
paralist 0 0:)
paralist 1 0:)
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
39
paralist 0 1:)
paralist 1 1:)
===
40
functiondefine 1 4:INT VOID BOOL FLOAT CHAR
funstat 0 4:VOID BOOL INT FLOAT CHAR
===
41
idlist 0 3:;
===
42
atype 0 4:ID
===
43
mainfunction 0 4:VOID BOOL INT FLOAT CHAR
===
44
con 0 0:;
con 1 0:;
con 2 0:;
con 3 0:;
con 4 0:;
con 5 0:;
constat 0 4:VOID BOOL INT FLOAT CHAR
digit 0 0:;
digit 1 0:;
===
45
functiondefine 0 4:INT VOID BOOL FLOAT CHAR
===
46
functiondefine 1 4:$ VOID BOOL INT FLOAT CHAR
===
47
functiondefine 0 4:$ VOID BOOL INT FLOAT CHAR
===
48
paralist 0 2:)
paralist 1 2:)
===
49
functiondefine 1 5:INT VOID BOOL FLOAT CHAR
funstat 0 5:VOID BOOL INT FLOAT CHAR
===
50
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
atype 0 0:ID
block 0 0:RETURN
block 1 0:RETURN
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
mainfunction 0 5:VOID BOOL INT FLOAT CHAR
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
51
constat 0 5:VOID BOOL INT FLOAT CHAR
===
52
con 2 1:;
===
53
digit 0 1:;
===
54
digit 1 1:;
===
55
con 0 1:;
===
56
con 1 1:;
===
57
con 3 1:;
===
58
con 4 1:;
===
59
con 5 1:;
===
60
functiondefine 0 5:INT VOID BOOL FLOAT CHAR
===
61
functiondefine 1 5:$ VOID BOOL INT FLOAT CHAR
===
62
functiondefine 0 5:$ VOID BOOL INT FLOAT CHAR
===
63
atype 0 0:ID
paralist 0 0:)
paralist 1 0:)
paralist 1 3:)
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
64
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
atype 0 0:ID
block 0 0:RETURN
block 1 0:RETURN
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
functiondefine 1 6:INT VOID BOOL FLOAT CHAR
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
return 0 0:}
return 1 0:}
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
65
funstat 0 6:VOID BOOL INT FLOAT CHAR
===
66
wstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
67
mainfunction 0 6:VOID BOOL INT FLOAT CHAR
===
68
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
atype 0 0:ID
block 0 0:RETURN
block 0 1:RETURN
block 1 0:RETURN
block 1 1:RETURN
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
69
wstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
70
expstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
71
expstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
72
expstat 2 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
73
funstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
idlist 0 0:;
idlist 1 0:;
varstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
74
asstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
75
exestat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
76
exestat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
77
exestat 2 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
78
exestat 3 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
79
controlstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
80
controlstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
81
controlstat 2 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
82
controlstat 3 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
83
atype 0 0:ID
constat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
84
arrayelement 0 1:=
asstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
85
rstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
86
wrstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
87
ifstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
88
whilestat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
89
dowhilestat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
90
forstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
91
constat 0 6:VOID BOOL INT FLOAT CHAR
===
92
digit 1 2:;
===
93
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
functiondefine 0 6:INT VOID BOOL FLOAT CHAR
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
94
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
atype 0 0:ID
block 0 0:RETURN
block 1 0:RETURN
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
functiondefine 1 6:$ VOID BOOL INT FLOAT CHAR
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
return 0 0:}
return 1 0:}
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
95
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
functiondefine 0 6:$ VOID BOOL INT FLOAT CHAR
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
96
paralist 1 4:)
===
97
functiondefine 1 7:INT VOID BOOL FLOAT CHAR
return 0 0:}
return 1 0:}
===
98
con 0 0:;
con 1 0:;
con 2 0:;
con 3 0:;
con 4 0:;
con 5 0:;
digit 0 0:;
digit 1 0:;
return 0 1:}
return 1 1:}
===
99
mainfunction 0 7:VOID BOOL INT FLOAT CHAR
===
100
block 0 2:RETURN
===
101
varstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
102
funstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
idlist 0 1:;
idlist 1 1:;
===
103
asstat 1 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
104
constat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
105
arrayelement 0 2:=
===
106
asstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
107
atype 0 0:,
rstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
stype 0 0:, [
stype 1 0:, [
stype 2 0:, [
stype 3 0:, [
type 0 0:,
type 1 0:,
===
108
idlist 0 0:)
idlist 1 0:)
wrstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
109
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
ifstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
110
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
whilestat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
111
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
112
arrayelement 0 0:=
asstat 0 0:BOOL ID NUM FLOAT - ( !
asstat 1 0:BOOL ID NUM FLOAT - ( !
forstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
113
wstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
114
functiondefine 0 7:INT VOID BOOL FLOAT CHAR
===
115
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 0 1:}
block 1 0:}
block 1 1:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
116
wstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
117
expstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
118
expstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
119
expstat 2 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
120
funstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
idlist 0 0:;
idlist 1 0:;
varstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
121
asstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
122
exestat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
123
exestat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
124
exestat 2 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
125
exestat 3 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
126
controlstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
127
controlstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
128
controlstat 2 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
129
controlstat 3 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
130
atype 0 0:ID
constat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
131
arrayelement 0 1:=
asstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
132
rstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
133
wrstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
134
ifstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
135
whilestat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
136
dowhilestat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
137
forstat 0 1:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
138
functiondefine 1 7:$ VOID BOOL INT FLOAT CHAR
return 0 0:}
return 1 0:}
===
139
functiondefine 0 7:$ VOID BOOL INT FLOAT CHAR
===
140
functiondefine 1 8:INT VOID BOOL FLOAT CHAR
===
141
return 0 2:}
===
142
return 1 2:}
===
143
mainfunction 0 8:VOID BOOL INT FLOAT CHAR
===
144
varstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
145
atype 0 0:ID
funstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
paralist 0 0:)
paralist 1 0:)
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
146
asstat 1 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
147
calexp 0 1:; + - % LE GE L G EQ NE
calexp 1 1:; + - % LE GE L G EQ NE
calexp 2 1:; + - % LE GE L G EQ NE
compare 0 0:ID NUM FLOAT - (
compare 1 0:ID NUM FLOAT - (
compare 2 0:ID NUM FLOAT - (
compare 3 0:ID NUM FLOAT - (
compare 4 0:ID NUM FLOAT - (
compare 5 0:ID NUM FLOAT - (
exp 0 1:;
regexp 0 1:; OR &&
===
148
exp 1 1:;
===
149
bool 2 1:OR ; &&
exp 2 1:;
===
150
calexp 3 1:; + - % LE GE L G EQ NE
item 0 1:; + - % * /
item 1 1:; + - % * /
===
151
item 2 1:; + - % * /
===
152
bitem 0 1:OR ; &&
boexp 0 1:;
boexp 1 1:;
===
153
bitem 1 1:OR ; &&
===
154
bfactory 0 1:OR ; &&
===
155
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bfactory 2 1:OR ; &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:; + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
156
bool 1 1:OR ; &&
factory 0 1:; + - % * /
===
157
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 3 1:; + - % * /
factory 4 0:; + - % * /
===
158
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 1 1:OR ; &&
bfactory 2 0:OR ; &&
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ; &&
===
159
factory 1 1:; + - % * /
===
160
factory 2 1:; + - % * /
===
161
bool 0 1:OR ; &&
===
162
constat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
163
arrayelement 0 3:=
===
164
asstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
165
rstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
166
atype 0 1:,
type 0 1:,
===
167
type 1 1:,
===
168
stype 1 1:, [
===
169
stype 2 1:, [
===
170
stype 0 1:, [
===
171
stype 3 1:, [
===
172
wrstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
173
idlist 0 1:)
idlist 1 1:)
===
174
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID NUM FLOAT - (
compare 1 0:ID NUM FLOAT - (
compare 2 0:ID NUM FLOAT - (
compare 3 0:ID NUM FLOAT - (
compare 4 0:ID NUM FLOAT - (
compare 5 0:ID NUM FLOAT - (
regexp 0 1:OR ) &&
===
175
ifstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
176
bool 2 1:OR ) &&
===
177
calexp 3 1:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
178
item 2 1:LE GE L G EQ NE + - % * /
===
179
bitem 0 1:OR ) &&
boexp 0 1:)
boexp 1 1:)
===
180
bitem 1 1:OR ) &&
===
181
bfactory 0 1:OR ) &&
===
182
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bfactory 2 1:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:LE GE L G EQ NE + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
183
bool 1 1:OR ) &&
factory 0 1:LE GE L G EQ NE + - % * /
===
184
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 3 1:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
===
185
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 1 1:OR ) &&
bfactory 2 0:OR ) &&
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
186
factory 1 1:LE GE L G EQ NE + - % * /
===
187
factory 2 1:LE GE L G EQ NE + - % * /
===
188
bool 0 1:OR ) &&
===
189
whilestat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
190
dowhilestat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
191
asstat 1 1:BOOL ID NUM FLOAT - ( !
===
192
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
forstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ; &&
===
193
arrayelement 0 1:=
asstat 0 1:BOOL ID NUM FLOAT - ( !
===
194
functiondefine 0 8:INT VOID BOOL FLOAT CHAR
===
195
block 0 2:}
===
196
varstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
197
funstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
idlist 0 1:;
idlist 1 1:;
===
198
asstat 1 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
199
constat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
200
asstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
201
atype 0 0:,
rstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:, [
stype 1 0:, [
stype 2 0:, [
stype 3 0:, [
type 0 0:,
type 1 0:,
===
202
idlist 0 0:)
idlist 1 0:)
wrstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
203
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
ifstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
204
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
whilestat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
205
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
206
arrayelement 0 0:=
asstat 0 0:BOOL ID NUM FLOAT - ( !
asstat 1 0:BOOL ID NUM FLOAT - ( !
forstat 0 2:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
207
functiondefine 1 8:$ VOID BOOL INT FLOAT CHAR
===
208
functiondefine 0 8:$ VOID BOOL INT FLOAT CHAR
===
209
functiondefine 1 9:INT VOID BOOL FLOAT CHAR
===
210
return 0 3:}
===
211
return 1 3:}
===
212
mainfunction 0 9:VOID BOOL INT FLOAT CHAR
===
213
funstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
214
asstat 1 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
215
calexp 0 0:; OR && + - %
calexp 1 0:; OR && + - %
calexp 2 0:; OR && + - %
calexp 3 0:; OR && + - %
factory 0 0:; OR && + - % * /
factory 1 0:; OR && + - % * /
factory 2 0:; OR && + - % * /
factory 3 0:; OR && + - % * /
factory 4 0:; OR && + - % * /
item 0 0:; OR && + - % * /
item 1 0:; OR && + - % * /
item 2 0:; OR && + - % * /
regexp 0 2:; OR &&
===
216
calexp 0 2:; + - % LE GE L G EQ NE
factory 0 0:; + - % LE GE L G EQ NE * /
factory 1 0:; + - % LE GE L G EQ NE * /
factory 2 0:; + - % LE GE L G EQ NE * /
factory 3 0:; + - % LE GE L G EQ NE * /
factory 4 0:; + - % LE GE L G EQ NE * /
item 0 0:; + - % LE GE L G EQ NE * /
item 1 0:; + - % LE GE L G EQ NE * /
item 2 0:; + - % LE GE L G EQ NE * /
===
217
calexp 1 2:; + - % LE GE L G EQ NE
factory 0 0:; + - % LE GE L G EQ NE * /
factory 1 0:; + - % LE GE L G EQ NE * /
factory 2 0:; + - % LE GE L G EQ NE * /
factory 3 0:; + - % LE GE L G EQ NE * /
factory 4 0:; + - % LE GE L G EQ NE * /
item 0 0:; + - % LE GE L G EQ NE * /
item 1 0:; + - % LE GE L G EQ NE * /
item 2 0:; + - % LE GE L G EQ NE * /
===
218
calexp 2 2:; + - % LE GE L G EQ NE
factory 0 0:; + - % LE GE L G EQ NE * /
factory 1 0:; + - % LE GE L G EQ NE * /
factory 2 0:; + - % LE GE L G EQ NE * /
factory 3 0:; + - % LE GE L G EQ NE * /
factory 4 0:; + - % LE GE L G EQ NE * /
item 0 0:; + - % LE GE L G EQ NE * /
item 1 0:; + - % LE GE L G EQ NE * /
item 2 0:; + - % LE GE L G EQ NE * /
===
219
compare 0 1:ID NUM FLOAT - (
===
220
compare 1 1:ID NUM FLOAT - (
===
221
compare 2 1:ID NUM FLOAT - (
===
222
compare 3 1:ID NUM FLOAT - (
===
223
compare 4 1:ID NUM FLOAT - (
===
224
compare 5 1:ID NUM FLOAT - (
===
225
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 1 2:; + - % * /
===
226
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 2:; + - % * /
===
227
bfactory 0 0:; &&
bfactory 1 0:; &&
bfactory 2 0:; &&
bitem 0 0:; &&
bitem 1 0:; &&
boexp 0 2:;
bool 0 0:; &&
bool 1 0:; &&
bool 2 0:; &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:; &&
===
228
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 2:OR ; &&
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ; &&
===
229
bfactory 2 2:OR ; &&
factory 4 2:; + - % * /
===
230
calexp 0 1:) + - % LE GE L G EQ NE
calexp 1 1:) + - % LE GE L G EQ NE
calexp 2 1:) + - % LE GE L G EQ NE
compare 0 0:ID NUM FLOAT - (
compare 1 0:ID NUM FLOAT - (
compare 2 0:ID NUM FLOAT - (
compare 3 0:ID NUM FLOAT - (
compare 4 0:ID NUM FLOAT - (
compare 5 0:ID NUM FLOAT - (
exp 0 1:)
regexp 0 1:) OR &&
===
231
exp 1 1:)
===
232
bool 2 1:OR ) &&
exp 2 1:)
===
233
calexp 3 1:) + - % LE GE L G EQ NE
item 0 1:) + - % * /
item 1 1:) + - % * /
===
234
item 2 1:) + - % * /
===
235
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bfactory 2 1:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:) + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
236
bool 1 1:OR ) &&
factory 0 1:) + - % * /
===
237
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 3 1:) + - % * /
factory 4 0:) + - % * /
===
238
factory 1 1:) + - % * /
===
239
factory 2 1:) + - % * /
===
240
factory 3 2:; + - % * /
===
241
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID NUM FLOAT - (
compare 1 0:ID NUM FLOAT - (
compare 2 0:ID NUM FLOAT - (
compare 3 0:ID NUM FLOAT - (
compare 4 0:ID NUM FLOAT - (
compare 5 0:ID NUM FLOAT - (
regexp 0 1:OR ; &&
===
242
bfactory 1 2:OR ; &&
===
243
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bfactory 2 1:OR ; &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:LE GE L G EQ NE + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
244
bool 1 1:OR ; &&
factory 0 1:LE GE L G EQ NE + - % * /
===
245
con 0 0:;
con 1 0:;
con 2 0:;
con 3 0:;
con 4 0:;
con 5 0:;
constat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
digit 0 0:;
digit 1 0:;
===
246
arrayelement 0 4:=
===
247
asstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
248
rstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
249
atype 0 2:,
===
250
wrstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
251
idlist 0 0:)
idlist 0 2:)
idlist 1 0:)
===
252
calexp 0 0:OR ) && + - %
calexp 1 0:OR ) && + - %
calexp 2 0:OR ) && + - %
calexp 3 0:OR ) && + - %
factory 0 0:OR ) && + - % * /
factory 1 0:OR ) && + - % * /
factory 2 0:OR ) && + - % * /
factory 3 0:OR ) && + - % * /
factory 4 0:OR ) && + - % * /
item 0 0:OR ) && + - % * /
item 1 0:OR ) && + - % * /
item 2 0:OR ) && + - % * /
regexp 0 2:OR ) &&
===
253
calexp 0 2:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
===
254
calexp 1 2:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
===
255
calexp 2 2:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
===
256
ifstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
257
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 1 2:LE GE L G EQ NE + - % * /
===
258
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 2:LE GE L G EQ NE + - % * /
===
259
bfactory 0 0:) &&
bfactory 1 0:) &&
bfactory 2 0:) &&
bitem 0 0:) &&
bitem 1 0:) &&
boexp 0 2:)
bool 0 0:) &&
bool 1 0:) &&
bool 2 0:) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:) &&
===
260
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 2:OR ) &&
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
261
bfactory 2 2:OR ) &&
factory 4 2:LE GE L G EQ NE + - % * /
===
262
factory 3 2:LE GE L G EQ NE + - % * /
===
263
bfactory 1 2:OR ) &&
===
264
whilestat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
265
dowhilestat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
266
asstat 1 2:BOOL ID NUM FLOAT - ( !
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
267
forstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
268
asstat 0 2:BOOL ID NUM FLOAT - ( !
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
269
varstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
270
atype 0 0:ID
funstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
paralist 0 0:)
paralist 1 0:)
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
===
271
asstat 1 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
272
constat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
273
asstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
274
rstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
275
wrstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
276
ifstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
277
whilestat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
278
dowhilestat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
279
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
forstat 0 3:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ; &&
===
280
functiondefine 1 9:$ VOID BOOL INT FLOAT CHAR
===
281
mainfunction 0 10:VOID BOOL INT FLOAT CHAR
===
282
funstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
283
calexp 0 1:; OR && + - %
calexp 1 1:; OR && + - %
calexp 2 1:; OR && + - %
regexp 0 3:; OR &&
===
284
calexp 3 1:; OR && + - %
item 0 1:; OR && + - % * /
item 1 1:; OR && + - % * /
===
285
item 2 1:; OR && + - % * /
===
286
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:; OR && + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
287
factory 0 1:; OR && + - % * /
===
288
factory 0 0:; OR && + - % * /
factory 1 0:; OR && + - % * /
factory 2 0:; OR && + - % * /
factory 3 0:; OR && + - % * /
factory 3 1:; OR && + - % * /
factory 4 0:; OR && + - % * /
===
289
factory 1 1:; OR && + - % * /
===
290
factory 2 1:; OR && + - % * /
===
291
calexp 0 3:; + - % LE GE L G EQ NE
item 0 1:; + - % LE GE L G EQ NE * /
item 1 1:; + - % LE GE L G EQ NE * /
===
292
item 2 1:; + - % LE GE L G EQ NE * /
===
293
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:; + - % LE GE L G EQ NE * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
294
factory 0 1:; + - % LE GE L G EQ NE * /
===
295
factory 0 0:; + - % LE GE L G EQ NE * /
factory 1 0:; + - % LE GE L G EQ NE * /
factory 2 0:; + - % LE GE L G EQ NE * /
factory 3 0:; + - % LE GE L G EQ NE * /
factory 3 1:; + - % LE GE L G EQ NE * /
factory 4 0:; + - % LE GE L G EQ NE * /
===
296
factory 1 1:; + - % LE GE L G EQ NE * /
===
297
factory 2 1:; + - % LE GE L G EQ NE * /
===
298
calexp 1 3:; + - % LE GE L G EQ NE
item 0 1:; + - % LE GE L G EQ NE * /
item 1 1:; + - % LE GE L G EQ NE * /
===
299
calexp 2 3:; + - % LE GE L G EQ NE
item 0 1:; + - % LE GE L G EQ NE * /
item 1 1:; + - % LE GE L G EQ NE * /
===
300
item 1 3:; + - % * /
===
301
item 0 3:; + - % * /
===
302
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID NUM FLOAT - (
compare 1 0:ID NUM FLOAT - (
compare 2 0:ID NUM FLOAT - (
compare 3 0:ID NUM FLOAT - (
compare 4 0:ID NUM FLOAT - (
compare 5 0:ID NUM FLOAT - (
regexp 0 1:; &&
===
303
bool 2 1:; &&
===
304
bitem 0 1:; &&
boexp 0 3:;
===
305
bitem 1 1:; &&
===
306
bfactory 0 1:; &&
===
307
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bfactory 2 1:; &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:LE GE L G EQ NE + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
308
bool 1 1:; &&
factory 0 1:LE GE L G EQ NE + - % * /
===
309
bfactory 0 0:; &&
bfactory 1 0:; &&
bfactory 1 1:; &&
bfactory 2 0:; &&
bool 0 0:; &&
bool 1 0:; &&
bool 2 0:; &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:; &&
===
310
bool 0 1:; &&
===
311
bitem 0 3:OR ; &&
===
312
bfactory 2 3:OR ; &&
factory 4 3:; + - % * /
===
313
calexp 0 0:) OR && + - %
calexp 1 0:) OR && + - %
calexp 2 0:) OR && + - %
calexp 3 0:) OR && + - %
factory 0 0:) OR && + - % * /
factory 1 0:) OR && + - % * /
factory 2 0:) OR && + - % * /
factory 3 0:) OR && + - % * /
factory 4 0:) OR && + - % * /
item 0 0:) OR && + - % * /
item 1 0:) OR && + - % * /
item 2 0:) OR && + - % * /
regexp 0 2:) OR &&
===
314
calexp 0 2:) + - % LE GE L G EQ NE
factory 0 0:) + - % LE GE L G EQ NE * /
factory 1 0:) + - % LE GE L G EQ NE * /
factory 2 0:) + - % LE GE L G EQ NE * /
factory 3 0:) + - % LE GE L G EQ NE * /
factory 4 0:) + - % LE GE L G EQ NE * /
item 0 0:) + - % LE GE L G EQ NE * /
item 1 0:) + - % LE GE L G EQ NE * /
item 2 0:) + - % LE GE L G EQ NE * /
===
315
calexp 1 2:) + - % LE GE L G EQ NE
factory 0 0:) + - % LE GE L G EQ NE * /
factory 1 0:) + - % LE GE L G EQ NE * /
factory 2 0:) + - % LE GE L G EQ NE * /
factory 3 0:) + - % LE GE L G EQ NE * /
factory 4 0:) + - % LE GE L G EQ NE * /
item 0 0:) + - % LE GE L G EQ NE * /
item 1 0:) + - % LE GE L G EQ NE * /
item 2 0:) + - % LE GE L G EQ NE * /
===
316
calexp 2 2:) + - % LE GE L G EQ NE
factory 0 0:) + - % LE GE L G EQ NE * /
factory 1 0:) + - % LE GE L G EQ NE * /
factory 2 0:) + - % LE GE L G EQ NE * /
factory 3 0:) + - % LE GE L G EQ NE * /
factory 4 0:) + - % LE GE L G EQ NE * /
item 0 0:) + - % LE GE L G EQ NE * /
item 1 0:) + - % LE GE L G EQ NE * /
item 2 0:) + - % LE GE L G EQ NE * /
===
317
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 1 2:) + - % * /
===
318
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
item 0 2:) + - % * /
===
319
bfactory 2 2:OR ) &&
factory 4 2:) + - % * /
===
320
factory 3 2:) + - % * /
===
321
calexp 0 0:OR ; && + - %
calexp 1 0:OR ; && + - %
calexp 2 0:OR ; && + - %
calexp 3 0:OR ; && + - %
factory 0 0:OR ; && + - % * /
factory 1 0:OR ; && + - % * /
factory 2 0:OR ; && + - % * /
factory 3 0:OR ; && + - % * /
factory 4 0:OR ; && + - % * /
item 0 0:OR ; && + - % * /
item 1 0:OR ; && + - % * /
item 2 0:OR ; && + - % * /
regexp 0 2:OR ; &&
===
322
bfactory 2 2:OR ; &&
factory 4 2:LE GE L G EQ NE + - % * /
===
323
constat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
324
rstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
325
atype 0 3:,
===
326
wrstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
327
idlist 0 3:)
===
328
calexp 0 1:OR ) && + - %
calexp 1 1:OR ) && + - %
calexp 2 1:OR ) && + - %
regexp 0 3:OR ) &&
===
329
calexp 3 1:OR ) && + - %
item 0 1:OR ) && + - % * /
item 1 1:OR ) && + - % * /
===
330
item 2 1:OR ) && + - % * /
===
331
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:OR ) && + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
332
factory 0 1:OR ) && + - % * /
===
333
factory 0 0:OR ) && + - % * /
factory 1 0:OR ) && + - % * /
factory 2 0:OR ) && + - % * /
factory 3 0:OR ) && + - % * /
factory 3 1:OR ) && + - % * /
factory 4 0:OR ) && + - % * /
===
334
factory 1 1:OR ) && + - % * /
===
335
factory 2 1:OR ) && + - % * /
===
336
calexp 0 3:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
337
calexp 1 3:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
338
calexp 2 3:LE GE L G EQ NE + - %
item 0 1:LE GE L G EQ NE + - % * /
item 1 1:LE GE L G EQ NE + - % * /
===
339
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
340
item 1 3:LE GE L G EQ NE + - % * /
===
341
item 0 3:LE GE L G EQ NE + - % * /
===
342
calexp 0 1:LE GE L G EQ NE + - %
calexp 1 1:LE GE L G EQ NE + - %
calexp 2 1:LE GE L G EQ NE + - %
compare 0 0:ID NUM FLOAT - (
compare 1 0:ID NUM FLOAT - (
compare 2 0:ID NUM FLOAT - (
compare 3 0:ID NUM FLOAT - (
compare 4 0:ID NUM FLOAT - (
compare 5 0:ID NUM FLOAT - (
regexp 0 1:) &&
===
343
bool 2 1:) &&
===
344
bitem 0 1:) &&
boexp 0 3:)
===
345
bitem 1 1:) &&
===
346
bfactory 0 1:) &&
===
347
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bfactory 2 1:) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:LE GE L G EQ NE + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
348
bool 1 1:) &&
factory 0 1:LE GE L G EQ NE + - % * /
===
349
bfactory 0 0:) &&
bfactory 1 0:) &&
bfactory 1 1:) &&
bfactory 2 0:) &&
bool 0 0:) &&
bool 1 0:) &&
bool 2 0:) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:) &&
===
350
bool 0 1:) &&
===
351
bitem 0 3:OR ) &&
===
352
bfactory 2 3:OR ) &&
factory 4 3:LE GE L G EQ NE + - % * /
===
353
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
354
dowhilestat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
355
asstat 1 3:BOOL ID NUM FLOAT - ( !
===
356
arrayelement 0 0:=
asstat 0 0:)
asstat 1 0:)
forstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
357
asstat 0 3:BOOL ID NUM FLOAT - ( !
===
358
funstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
359
asstat 1 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
360
con 0 0:;
con 1 0:;
con 2 0:;
con 3 0:;
con 4 0:;
con 5 0:;
constat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
digit 0 0:;
digit 1 0:;
===
361
asstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
362
rstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
363
wrstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
364
ifstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
365
whilestat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
366
dowhilestat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
367
forstat 0 4:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
368
funstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
369
calexp 0 2:; OR && + - %
factory 0 0:; OR && + - % * /
factory 1 0:; OR && + - % * /
factory 2 0:; OR && + - % * /
factory 3 0:; OR && + - % * /
factory 4 0:; OR && + - % * /
item 0 0:; OR && + - % * /
item 1 0:; OR && + - % * /
item 2 0:; OR && + - % * /
===
370
calexp 1 2:; OR && + - %
factory 0 0:; OR && + - % * /
factory 1 0:; OR && + - % * /
factory 2 0:; OR && + - % * /
factory 3 0:; OR && + - % * /
factory 4 0:; OR && + - % * /
item 0 0:; OR && + - % * /
item 1 0:; OR && + - % * /
item 2 0:; OR && + - % * /
===
371
calexp 2 2:; OR && + - %
factory 0 0:; OR && + - % * /
factory 1 0:; OR && + - % * /
factory 2 0:; OR && + - % * /
factory 3 0:; OR && + - % * /
factory 4 0:; OR && + - % * /
item 0 0:; OR && + - % * /
item 1 0:; OR && + - % * /
item 2 0:; OR && + - % * /
===
372
factory 0 0:; OR && + - % * /
factory 1 0:; OR && + - % * /
factory 2 0:; OR && + - % * /
factory 3 0:; OR && + - % * /
factory 4 0:; OR && + - % * /
item 1 2:; OR && + - % * /
===
373
factory 0 0:; OR && + - % * /
factory 1 0:; OR && + - % * /
factory 2 0:; OR && + - % * /
factory 3 0:; OR && + - % * /
factory 4 0:; OR && + - % * /
item 0 2:; OR && + - % * /
===
374
factory 4 2:; OR && + - % * /
===
375
factory 3 2:; OR && + - % * /
===
376
factory 0 0:; + - % LE GE L G EQ NE * /
factory 1 0:; + - % LE GE L G EQ NE * /
factory 2 0:; + - % LE GE L G EQ NE * /
factory 3 0:; + - % LE GE L G EQ NE * /
factory 4 0:; + - % LE GE L G EQ NE * /
item 1 2:; + - % LE GE L G EQ NE * /
===
377
factory 0 0:; + - % LE GE L G EQ NE * /
factory 1 0:; + - % LE GE L G EQ NE * /
factory 2 0:; + - % LE GE L G EQ NE * /
factory 3 0:; + - % LE GE L G EQ NE * /
factory 4 0:; + - % LE GE L G EQ NE * /
item 0 2:; + - % LE GE L G EQ NE * /
===
378
factory 4 2:; + - % LE GE L G EQ NE * /
===
379
factory 3 2:; + - % LE GE L G EQ NE * /
===
380
calexp 0 0:; && + - %
calexp 1 0:; && + - %
calexp 2 0:; && + - %
calexp 3 0:; && + - %
factory 0 0:; && + - % * /
factory 1 0:; && + - % * /
factory 2 0:; && + - % * /
factory 3 0:; && + - % * /
factory 4 0:; && + - % * /
item 0 0:; && + - % * /
item 1 0:; && + - % * /
item 2 0:; && + - % * /
regexp 0 2:; &&
===
381
bfactory 0 0:; &&
bfactory 1 0:; &&
bfactory 2 0:; &&
bitem 0 2:; &&
bool 0 0:; &&
bool 1 0:; &&
bool 2 0:; &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:; &&
===
382
bfactory 2 2:; &&
factory 4 2:LE GE L G EQ NE + - % * /
===
383
bfactory 1 2:; &&
===
384
calexp 0 1:) OR && + - %
calexp 1 1:) OR && + - %
calexp 2 1:) OR && + - %
regexp 0 3:) OR &&
===
385
calexp 3 1:) OR && + - %
item 0 1:) OR && + - % * /
item 1 1:) OR && + - % * /
===
386
item 2 1:) OR && + - % * /
===
387
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:) OR && + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
388
factory 0 1:) OR && + - % * /
===
389
factory 0 0:) OR && + - % * /
factory 1 0:) OR && + - % * /
factory 2 0:) OR && + - % * /
factory 3 0:) OR && + - % * /
factory 3 1:) OR && + - % * /
factory 4 0:) OR && + - % * /
===
390
factory 1 1:) OR && + - % * /
===
391
factory 2 1:) OR && + - % * /
===
392
calexp 0 3:) + - % LE GE L G EQ NE
item 0 1:) + - % LE GE L G EQ NE * /
item 1 1:) + - % LE GE L G EQ NE * /
===
393
item 2 1:) + - % LE GE L G EQ NE * /
===
394
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:) + - % LE GE L G EQ NE * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
395
factory 0 1:) + - % LE GE L G EQ NE * /
===
396
factory 0 0:) + - % LE GE L G EQ NE * /
factory 1 0:) + - % LE GE L G EQ NE * /
factory 2 0:) + - % LE GE L G EQ NE * /
factory 3 0:) + - % LE GE L G EQ NE * /
factory 3 1:) + - % LE GE L G EQ NE * /
factory 4 0:) + - % LE GE L G EQ NE * /
===
397
factory 1 1:) + - % LE GE L G EQ NE * /
===
398
factory 2 1:) + - % LE GE L G EQ NE * /
===
399
calexp 1 3:) + - % LE GE L G EQ NE
item 0 1:) + - % LE GE L G EQ NE * /
item 1 1:) + - % LE GE L G EQ NE * /
===
400
calexp 2 3:) + - % LE GE L G EQ NE
item 0 1:) + - % LE GE L G EQ NE * /
item 1 1:) + - % LE GE L G EQ NE * /
===
401
item 1 3:) + - % * /
===
402
item 0 3:) + - % * /
===
403
bfactory 2 3:OR ) &&
factory 4 3:) + - % * /
===
404
calexp 0 1:OR ; && + - %
calexp 1 1:OR ; && + - %
calexp 2 1:OR ; && + - %
regexp 0 3:OR ; &&
===
405
calexp 3 1:OR ; && + - %
item 0 1:OR ; && + - % * /
item 1 1:OR ; && + - % * /
===
406
item 2 1:OR ; && + - % * /
===
407
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:OR ; && + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
408
factory 0 1:OR ; && + - % * /
===
409
factory 0 0:OR ; && + - % * /
factory 1 0:OR ; && + - % * /
factory 2 0:OR ; && + - % * /
factory 3 0:OR ; && + - % * /
factory 3 1:OR ; && + - % * /
factory 4 0:OR ; && + - % * /
===
410
factory 1 1:OR ; && + - % * /
===
411
factory 2 1:OR ; && + - % * /
===
412
bfactory 2 3:OR ; &&
factory 4 3:LE GE L G EQ NE + - % * /
===
413
constat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
414
rstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
415
atype 0 4:,
===
416
calexp 0 2:OR ) && + - %
factory 0 0:OR ) && + - % * /
factory 1 0:OR ) && + - % * /
factory 2 0:OR ) && + - % * /
factory 3 0:OR ) && + - % * /
factory 4 0:OR ) && + - % * /
item 0 0:OR ) && + - % * /
item 1 0:OR ) && + - % * /
item 2 0:OR ) && + - % * /
===
417
calexp 1 2:OR ) && + - %
factory 0 0:OR ) && + - % * /
factory 1 0:OR ) && + - % * /
factory 2 0:OR ) && + - % * /
factory 3 0:OR ) && + - % * /
factory 4 0:OR ) && + - % * /
item 0 0:OR ) && + - % * /
item 1 0:OR ) && + - % * /
item 2 0:OR ) && + - % * /
===
418
calexp 2 2:OR ) && + - %
factory 0 0:OR ) && + - % * /
factory 1 0:OR ) && + - % * /
factory 2 0:OR ) && + - % * /
factory 3 0:OR ) && + - % * /
factory 4 0:OR ) && + - % * /
item 0 0:OR ) && + - % * /
item 1 0:OR ) && + - % * /
item 2 0:OR ) && + - % * /
===
419
factory 0 0:OR ) && + - % * /
factory 1 0:OR ) && + - % * /
factory 2 0:OR ) && + - % * /
factory 3 0:OR ) && + - % * /
factory 4 0:OR ) && + - % * /
item 1 2:OR ) && + - % * /
===
420
factory 0 0:OR ) && + - % * /
factory 1 0:OR ) && + - % * /
factory 2 0:OR ) && + - % * /
factory 3 0:OR ) && + - % * /
factory 4 0:OR ) && + - % * /
item 0 2:OR ) && + - % * /
===
421
factory 4 2:OR ) && + - % * /
===
422
factory 3 2:OR ) && + - % * /
===
423
ifstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
424
calexp 0 0:) && + - %
calexp 1 0:) && + - %
calexp 2 0:) && + - %
calexp 3 0:) && + - %
factory 0 0:) && + - % * /
factory 1 0:) && + - % * /
factory 2 0:) && + - % * /
factory 3 0:) && + - % * /
factory 4 0:) && + - % * /
item 0 0:) && + - % * /
item 1 0:) && + - % * /
item 2 0:) && + - % * /
regexp 0 2:) &&
===
425
bfactory 0 0:) &&
bfactory 1 0:) &&
bfactory 2 0:) &&
bitem 0 2:) &&
bool 0 0:) &&
bool 1 0:) &&
bool 2 0:) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:) &&
===
426
bfactory 2 2:) &&
factory 4 2:LE GE L G EQ NE + - % * /
===
427
bfactory 1 2:) &&
===
428
whilestat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
429
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
dowhilestat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
430
asstat 1 4:BOOL ID NUM FLOAT - ( !
===
431
asstat 1 1:)
===
432
forstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
433
arrayelement 0 1:=
asstat 0 1:)
===
434
asstat 0 4:BOOL ID NUM FLOAT - ( !
===
435
funstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
436
constat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
437
rstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
438
wrstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
439
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
440
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
441
dowhilestat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
442
arrayelement 0 0:=
asstat 0 0:)
asstat 1 0:)
forstat 0 5:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
443
calexp 0 3:; OR && + - %
item 0 1:; OR && + - % * /
item 1 1:; OR && + - % * /
===
444
calexp 1 3:; OR && + - %
item 0 1:; OR && + - % * /
item 1 1:; OR && + - % * /
===
445
calexp 2 3:; OR && + - %
item 0 1:; OR && + - % * /
item 1 1:; OR && + - % * /
===
446
item 1 3:; OR && + - % * /
===
447
item 0 3:; OR && + - % * /
===
448
factory 4 3:; OR && + - % * /
===
449
item 1 3:; + - % LE GE L G EQ NE * /
===
450
item 0 3:; + - % LE GE L G EQ NE * /
===
451
factory 4 3:; + - % LE GE L G EQ NE * /
===
452
calexp 0 1:; && + - %
calexp 1 1:; && + - %
calexp 2 1:; && + - %
regexp 0 3:; &&
===
453
calexp 3 1:; && + - %
item 0 1:; && + - % * /
item 1 1:; && + - % * /
===
454
item 2 1:; && + - % * /
===
455
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:; && + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
456
factory 0 1:; && + - % * /
===
457
factory 0 0:; && + - % * /
factory 1 0:; && + - % * /
factory 2 0:; && + - % * /
factory 3 0:; && + - % * /
factory 3 1:; && + - % * /
factory 4 0:; && + - % * /
===
458
factory 1 1:; && + - % * /
===
459
factory 2 1:; && + - % * /
===
460
bitem 0 3:; &&
===
461
bfactory 2 3:; &&
factory 4 3:LE GE L G EQ NE + - % * /
===
462
calexp 0 2:) OR && + - %
factory 0 0:) OR && + - % * /
factory 1 0:) OR && + - % * /
factory 2 0:) OR && + - % * /
factory 3 0:) OR && + - % * /
factory 4 0:) OR && + - % * /
item 0 0:) OR && + - % * /
item 1 0:) OR && + - % * /
item 2 0:) OR && + - % * /
===
463
calexp 1 2:) OR && + - %
factory 0 0:) OR && + - % * /
factory 1 0:) OR && + - % * /
factory 2 0:) OR && + - % * /
factory 3 0:) OR && + - % * /
factory 4 0:) OR && + - % * /
item 0 0:) OR && + - % * /
item 1 0:) OR && + - % * /
item 2 0:) OR && + - % * /
===
464
calexp 2 2:) OR && + - %
factory 0 0:) OR && + - % * /
factory 1 0:) OR && + - % * /
factory 2 0:) OR && + - % * /
factory 3 0:) OR && + - % * /
factory 4 0:) OR && + - % * /
item 0 0:) OR && + - % * /
item 1 0:) OR && + - % * /
item 2 0:) OR && + - % * /
===
465
factory 0 0:) OR && + - % * /
factory 1 0:) OR && + - % * /
factory 2 0:) OR && + - % * /
factory 3 0:) OR && + - % * /
factory 4 0:) OR && + - % * /
item 1 2:) OR && + - % * /
===
466
factory 0 0:) OR && + - % * /
factory 1 0:) OR && + - % * /
factory 2 0:) OR && + - % * /
factory 3 0:) OR && + - % * /
factory 4 0:) OR && + - % * /
item 0 2:) OR && + - % * /
===
467
factory 4 2:) OR && + - % * /
===
468
factory 3 2:) OR && + - % * /
===
469
factory 0 0:) + - % LE GE L G EQ NE * /
factory 1 0:) + - % LE GE L G EQ NE * /
factory 2 0:) + - % LE GE L G EQ NE * /
factory 3 0:) + - % LE GE L G EQ NE * /
factory 4 0:) + - % LE GE L G EQ NE * /
item 1 2:) + - % LE GE L G EQ NE * /
===
470
factory 0 0:) + - % LE GE L G EQ NE * /
factory 1 0:) + - % LE GE L G EQ NE * /
factory 2 0:) + - % LE GE L G EQ NE * /
factory 3 0:) + - % LE GE L G EQ NE * /
factory 4 0:) + - % LE GE L G EQ NE * /
item 0 2:) + - % LE GE L G EQ NE * /
===
471
factory 4 2:) + - % LE GE L G EQ NE * /
===
472
factory 3 2:) + - % LE GE L G EQ NE * /
===
473
calexp 0 2:OR ; && + - %
factory 0 0:OR ; && + - % * /
factory 1 0:OR ; && + - % * /
factory 2 0:OR ; && + - % * /
factory 3 0:OR ; && + - % * /
factory 4 0:OR ; && + - % * /
item 0 0:OR ; && + - % * /
item 1 0:OR ; && + - % * /
item 2 0:OR ; && + - % * /
===
474
calexp 1 2:OR ; && + - %
factory 0 0:OR ; && + - % * /
factory 1 0:OR ; && + - % * /
factory 2 0:OR ; && + - % * /
factory 3 0:OR ; && + - % * /
factory 4 0:OR ; && + - % * /
item 0 0:OR ; && + - % * /
item 1 0:OR ; && + - % * /
item 2 0:OR ; && + - % * /
===
475
calexp 2 2:OR ; && + - %
factory 0 0:OR ; && + - % * /
factory 1 0:OR ; && + - % * /
factory 2 0:OR ; && + - % * /
factory 3 0:OR ; && + - % * /
factory 4 0:OR ; && + - % * /
item 0 0:OR ; && + - % * /
item 1 0:OR ; && + - % * /
item 2 0:OR ; && + - % * /
===
476
factory 0 0:OR ; && + - % * /
factory 1 0:OR ; && + - % * /
factory 2 0:OR ; && + - % * /
factory 3 0:OR ; && + - % * /
factory 4 0:OR ; && + - % * /
item 1 2:OR ; && + - % * /
===
477
factory 0 0:OR ; && + - % * /
factory 1 0:OR ; && + - % * /
factory 2 0:OR ; && + - % * /
factory 3 0:OR ; && + - % * /
factory 4 0:OR ; && + - % * /
item 0 2:OR ; && + - % * /
===
478
factory 4 2:OR ; && + - % * /
===
479
factory 3 2:OR ; && + - % * /
===
480
rstat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
481
calexp 0 3:OR ) && + - %
item 0 1:OR ) && + - % * /
item 1 1:OR ) && + - % * /
===
482
calexp 1 3:OR ) && + - %
item 0 1:OR ) && + - % * /
item 1 1:OR ) && + - % * /
===
483
calexp 2 3:OR ) && + - %
item 0 1:OR ) && + - % * /
item 1 1:OR ) && + - % * /
===
484
item 1 3:OR ) && + - % * /
===
485
item 0 3:OR ) && + - % * /
===
486
factory 4 3:OR ) && + - % * /
===
487
elseifblock 0 0:ELSE ELSEIF
elseifblock 1 0:ELSE ELSEIF
ifstat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
488
calexp 0 1:) && + - %
calexp 1 1:) && + - %
calexp 2 1:) && + - %
regexp 0 3:) &&
===
489
calexp 3 1:) && + - %
item 0 1:) && + - % * /
item 1 1:) && + - % * /
===
490
item 2 1:) && + - % * /
===
491
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:) + - % LE GE L G EQ NE
calexp 1 0:) + - % LE GE L G EQ NE
calexp 2 0:) + - % LE GE L G EQ NE
calexp 3 0:) + - % LE GE L G EQ NE
exp 0 0:)
exp 1 0:)
exp 2 0:)
factory 0 0:) + - % * /
factory 1 0:) + - % * /
factory 2 0:) + - % * /
factory 3 0:) + - % * /
factory 4 0:) + - % * /
factory 4 1:) && + - % * /
item 0 0:) + - % * /
item 1 0:) + - % * /
item 2 0:) + - % * /
regexp 0 0:) OR &&
===
492
factory 0 1:) && + - % * /
===
493
factory 0 0:) && + - % * /
factory 1 0:) && + - % * /
factory 2 0:) && + - % * /
factory 3 0:) && + - % * /
factory 3 1:) && + - % * /
factory 4 0:) && + - % * /
===
494
factory 1 1:) && + - % * /
===
495
factory 2 1:) && + - % * /
===
496
bitem 0 3:) &&
===
497
bfactory 2 3:) &&
factory 4 3:LE GE L G EQ NE + - % * /
===
498
whilestat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
499
dowhilestat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
500
asstat 1 2:)
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
501
forstat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
502
asstat 0 2:)
bfactory 0 0:OR ; &&
bfactory 1 0:OR ; &&
bfactory 2 0:OR ; &&
bitem 0 0:OR ; &&
bitem 1 0:OR ; &&
boexp 0 0:;
boexp 1 0:;
bool 0 0:OR ; &&
bool 1 0:OR ; &&
bool 2 0:OR ; &&
calexp 0 0:; + - % LE GE L G EQ NE
calexp 1 0:; + - % LE GE L G EQ NE
calexp 2 0:; + - % LE GE L G EQ NE
calexp 3 0:; + - % LE GE L G EQ NE
exp 0 0:;
exp 1 0:;
exp 2 0:;
factory 0 0:; + - % * /
factory 1 0:; + - % * /
factory 2 0:; + - % * /
factory 3 0:; + - % * /
factory 4 0:; + - % * /
item 0 0:; + - % * /
item 1 0:; + - % * /
item 2 0:; + - % * /
regexp 0 0:; OR &&
===
503
funstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
504
constat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
505
rstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
506
ifstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
507
whilestat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
508
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
dowhilestat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
509
forstat 0 6:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
510
calexp 0 2:; && + - %
factory 0 0:; && + - % * /
factory 1 0:; && + - % * /
factory 2 0:; && + - % * /
factory 3 0:; && + - % * /
factory 4 0:; && + - % * /
item 0 0:; && + - % * /
item 1 0:; && + - % * /
item 2 0:; && + - % * /
===
511
calexp 1 2:; && + - %
factory 0 0:; && + - % * /
factory 1 0:; && + - % * /
factory 2 0:; && + - % * /
factory 3 0:; && + - % * /
factory 4 0:; && + - % * /
item 0 0:; && + - % * /
item 1 0:; && + - % * /
item 2 0:; && + - % * /
===
512
calexp 2 2:; && + - %
factory 0 0:; && + - % * /
factory 1 0:; && + - % * /
factory 2 0:; && + - % * /
factory 3 0:; && + - % * /
factory 4 0:; && + - % * /
item 0 0:; && + - % * /
item 1 0:; && + - % * /
item 2 0:; && + - % * /
===
513
factory 0 0:; && + - % * /
factory 1 0:; && + - % * /
factory 2 0:; && + - % * /
factory 3 0:; && + - % * /
factory 4 0:; && + - % * /
item 1 2:; && + - % * /
===
514
factory 0 0:; && + - % * /
factory 1 0:; && + - % * /
factory 2 0:; && + - % * /
factory 3 0:; && + - % * /
factory 4 0:; && + - % * /
item 0 2:; && + - % * /
===
515
factory 4 2:; && + - % * /
===
516
factory 3 2:; && + - % * /
===
517
calexp 0 3:) OR && + - %
item 0 1:) OR && + - % * /
item 1 1:) OR && + - % * /
===
518
calexp 1 3:) OR && + - %
item 0 1:) OR && + - % * /
item 1 1:) OR && + - % * /
===
519
calexp 2 3:) OR && + - %
item 0 1:) OR && + - % * /
item 1 1:) OR && + - % * /
===
520
item 1 3:) OR && + - % * /
===
521
item 0 3:) OR && + - % * /
===
522
factory 4 3:) OR && + - % * /
===
523
item 1 3:) + - % LE GE L G EQ NE * /
===
524
item 0 3:) + - % LE GE L G EQ NE * /
===
525
factory 4 3:) + - % LE GE L G EQ NE * /
===
526
calexp 0 3:OR ; && + - %
item 0 1:OR ; && + - % * /
item 1 1:OR ; && + - % * /
===
527
calexp 1 3:OR ; && + - %
item 0 1:OR ; && + - % * /
item 1 1:OR ; && + - % * /
===
528
calexp 2 3:OR ; && + - %
item 0 1:OR ; && + - % * /
item 1 1:OR ; && + - % * /
===
529
item 1 3:OR ; && + - % * /
===
530
item 0 3:OR ; && + - % * /
===
531
factory 4 3:OR ; && + - % * /
===
532
elseifblock 1 1:ELSE ELSEIF
ifstat 1 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
533
ifstat 0 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
534
elseifblock 0 1:ELSE ELSEIF
===
535
calexp 0 2:) && + - %
factory 0 0:) && + - % * /
factory 1 0:) && + - % * /
factory 2 0:) && + - % * /
factory 3 0:) && + - % * /
factory 4 0:) && + - % * /
item 0 0:) && + - % * /
item 1 0:) && + - % * /
item 2 0:) && + - % * /
===
536
calexp 1 2:) && + - %
factory 0 0:) && + - % * /
factory 1 0:) && + - % * /
factory 2 0:) && + - % * /
factory 3 0:) && + - % * /
factory 4 0:) && + - % * /
item 0 0:) && + - % * /
item 1 0:) && + - % * /
item 2 0:) && + - % * /
===
537
calexp 2 2:) && + - %
factory 0 0:) && + - % * /
factory 1 0:) && + - % * /
factory 2 0:) && + - % * /
factory 3 0:) && + - % * /
factory 4 0:) && + - % * /
item 0 0:) && + - % * /
item 1 0:) && + - % * /
item 2 0:) && + - % * /
===
538
factory 0 0:) && + - % * /
factory 1 0:) && + - % * /
factory 2 0:) && + - % * /
factory 3 0:) && + - % * /
factory 4 0:) && + - % * /
item 1 2:) && + - % * /
===
539
factory 0 0:) && + - % * /
factory 1 0:) && + - % * /
factory 2 0:) && + - % * /
factory 3 0:) && + - % * /
factory 4 0:) && + - % * /
item 0 2:) && + - % * /
===
540
factory 4 2:) && + - % * /
===
541
factory 3 2:) && + - % * /
===
542
dowhilestat 0 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
543
asstat 1 3:)
===
544
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
545
asstat 0 3:)
===
546
rstat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
547
elseifblock 0 0:ELSE ELSEIF
elseifblock 1 0:ELSE ELSEIF
ifstat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
548
whilestat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
549
dowhilestat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
550
forstat 0 7:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
551
calexp 0 3:; && + - %
item 0 1:; && + - % * /
item 1 1:; && + - % * /
===
552
calexp 1 3:; && + - %
item 0 1:; && + - % * /
item 1 1:; && + - % * /
===
553
calexp 2 3:; && + - %
item 0 1:; && + - % * /
item 1 1:; && + - % * /
===
554
item 1 3:; && + - % * /
===
555
item 0 3:; && + - % * /
===
556
factory 4 3:; && + - % * /
===
557
ifstat 1 9:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
558
elseifblock 1 2:ELSE ELSEIF
===
559
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 9:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
560
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
elseifblock 0 2:ELSE ELSEIF
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
561
calexp 0 3:) && + - %
item 0 1:) && + - % * /
item 1 1:) && + - % * /
===
562
calexp 1 3:) && + - %
item 0 1:) && + - % * /
item 1 1:) && + - % * /
===
563
calexp 2 3:) && + - %
item 0 1:) && + - % * /
item 1 1:) && + - % * /
===
564
item 1 3:) && + - % * /
===
565
item 0 3:) && + - % * /
===
566
factory 4 3:) && + - % * /
===
567
asstat 1 4:)
===
568
forstat 0 9:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
569
asstat 0 4:)
===
570
elseifblock 1 1:ELSE ELSEIF
ifstat 1 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
571
ifstat 0 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
572
dowhilestat 0 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
573
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 8:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
574
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 10:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
575
bfactory 0 0:OR ) &&
bfactory 1 0:OR ) &&
bfactory 2 0:OR ) &&
bitem 0 0:OR ) &&
bitem 1 0:OR ) &&
boexp 0 0:)
boexp 1 0:)
bool 0 0:OR ) &&
bool 1 0:OR ) &&
bool 2 0:OR ) &&
calexp 0 0:LE GE L G EQ NE + - %
calexp 1 0:LE GE L G EQ NE + - %
calexp 2 0:LE GE L G EQ NE + - %
calexp 3 0:LE GE L G EQ NE + - %
elseifblock 1 3:ELSE ELSEIF
factory 0 0:LE GE L G EQ NE + - % * /
factory 1 0:LE GE L G EQ NE + - % * /
factory 2 0:LE GE L G EQ NE + - % * /
factory 3 0:LE GE L G EQ NE + - % * /
factory 4 0:LE GE L G EQ NE + - % * /
item 0 0:LE GE L G EQ NE + - % * /
item 1 0:LE GE L G EQ NE + - % * /
item 2 0:LE GE L G EQ NE + - % * /
regexp 0 0:OR ) &&
===
576
ifstat 0 10:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
577
elseifblock 0 3:ELSE ELSEIF
===
578
forstat 0 10:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
579
ifstat 1 9:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
580
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 9:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
581
forstat 0 9:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
582
ifstat 1 11:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
583
elseifblock 1 4:ELSE ELSEIF
===
584
ifstat 0 11:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
585
elseifblock 0 4:ELSE ELSEIF
===
586
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 10:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
587
ifstat 0 10:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
588
forstat 0 10:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
589
ifstat 1 12:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR RETURN
===
590
elseifblock 1 5:ELSE ELSEIF
===
591
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
elseifblock 0 5:ELSE ELSEIF
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
592
ifstat 1 11:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
593
ifstat 0 11:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
594
arrayelement 0 0:=
asstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
asstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
atype 0 0:ID
block 0 0:}
block 1 0:}
constat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
controlstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
dowhilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
elseifblock 1 6:ELSE ELSEIF
exestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
exestat 4 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 2 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
expstat 3 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
forstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
funstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
ifstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
rstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
stype 0 0:ID [
stype 1 0:ID [
stype 2 0:ID [
stype 3 0:ID [
type 0 0:ID
type 1 0:ID
varstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
whilestat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wrstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 0 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
wstat 1 0:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
595
elseifblock 0 6:ELSE ELSEIF
===
596
ifstat 1 12:CONST BOOL INT FLOAT CHAR ID SCANF PRINTF IF WHILE DO FOR }
===
597
elseifblock 1 7:ELSE ELSEIF
===
598
elseifblock 0 7:ELSE ELSEIF
===
599
elseifblock 1 8:ELSE ELSEIF
===
