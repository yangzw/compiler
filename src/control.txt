CONST 4 INT 4 ID 4 = 4 INTCON 4 ; 4 INT 5 MAIN 5 ( 5 ) 5 { 6 INT 7 ID 7 ; 7 INT 8 ID 8 ; 8 CHAR 9 ID 9 ; 9 ID 10 ++ 10 ; 10 DOUBLE 11 ID 11 ; 11 CHAR 13 [ 13 INTCON 13 ] 13 ID 13 ; 13 INT 15 ID 15 ; 15 ID 16 = 16 DOUBLECON 16 ; 16 INT 17 ID 17 ; 17 ID 18 = 18 DOUBLECON 18 * 18 ( 18 INTCON 18 - 18 INTCON 18 ) 18 ; 18 INT 19 ID 19 ; 19 FOR 20 ( 20 ID 20 = 20 INTCON 20 ; 20 ID 20 L 20 INTCON 20 ; 20 ID 20 ++ 20 ) 20 { 20 ID 21 = 21 ID 21 && 21 ID 21 ; 21 PRINTF 23 ( 23 " 23 STRINGCON 23 " 23 ) 23 ; 23 } 24 FOR 25 ( 25 ID 25 = 25 ID 25 ; 25 ID 25 L 25 INTCON 25 ; 25 ID 25 ++ 25 ) 25 { 25 PRINTF 26 ( 26 " 26 STRINGCON b " 26 ) 26 ; 26 } 27 RETURN 28 INTCON 28 ; 28 } 29 $ 0
CONST:0
+ 11
move in:CONST 11
stack now:0 CONST 11
INT:11
+ 10
move in:INT 10
stack now:0 CONST 11 INT 10
ID:10
- stype 1
guiyue
stack now:0 CONST 11 INT 10..1
11:stype:8:INT
stack now:0 CONST 11 stype 8
ID:8
- type 0
guiyue
stack now:0 CONST 11 stype 8..1
11:type:23:stype
stack now:0 CONST 11 type 23
ID:23
+ 33
move in:ID 33
stack now:0 CONST 11 type 23 ID 33
=:33
+ 45
move in:= 45
stack now:0 CONST 11 type 23 ID 33 = 45
INTCON:45
+ 59
move in:INTCON 59
stack now:0 CONST 11 type 23 ID 33 = 45 INTCON 59
;:59
- con 0
guiyue
stack now:0 CONST 11 type 23 ID 33 = 45 INTCON 59..1
45:con:55:INTCON
stack now:0 CONST 11 type 23 ID 33 = 45 con 55
;:55
+ 71
move in:; 71
stack now:0 CONST 11 type 23 ID 33 = 45 con 55 ; 71
INT:71
- constat 0
guiyue
stack now:0 CONST 11 type 23 ID 33 = 45 con 55 ; 71..6
0:constat:4:CONST type ID = con ;
stack now:0 constat 4
INT:4
- expstat 0
guiyue
stack now:0 constat 4..1
0:expstat:3:constat
stack now:0 expstat 3
INT:3
+ 10
move in:INT 10
stack now:0 expstat 3 INT 10
MAIN:10
undef
